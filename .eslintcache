[{"/Users/Michael/Documents/study/DevTest/client/src/index.tsx":"1","/Users/Michael/Documents/study/DevTest/client/src/redux/store.ts":"2","/Users/Michael/Documents/study/DevTest/client/src/router.tsx":"3","/Users/Michael/Documents/study/DevTest/client/src/pages/Home.tsx":"4","/Users/Michael/Documents/study/DevTest/client/src/layout/Layout.tsx":"5","/Users/Michael/Documents/study/DevTest/client/src/components/Card.tsx":"6","/Users/Michael/Documents/study/DevTest/client/src/components/types/InputTypes.ts":"7","/Users/Michael/Documents/study/DevTest/client/src/components/Inputs.tsx":"8","/Users/Michael/Documents/study/DevTest/client/src/components/types/ButtonsTypes.ts":"9","/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auto/AutoActions.ts":"10","/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auto/AutoTypes.ts":"11","/Users/Michael/Documents/study/DevTest/client/src/redux/reducers/RootReducer.ts":"12","/Users/Michael/Documents/study/DevTest/client/src/redux/reducers/AutoReducer.ts":"13","/Users/Michael/Documents/study/DevTest/client/src/pages/auth/Register.tsx":"14","/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auth/AuthActions.ts":"15","/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auth/AuthTypes.ts":"16","/Users/Michael/Documents/study/DevTest/client/src/redux/reducers/AuthReducer.ts":"17","/Users/Michael/Documents/study/DevTest/client/src/pages/auth/Login.tsx":"18","/Users/Michael/Documents/study/DevTest/client/src/pages/Dashboard.tsx":"19"},{"size":422,"mtime":1611080697922,"results":"20","hashOfConfig":"21"},{"size":503,"mtime":1610908607587,"results":"22","hashOfConfig":"21"},{"size":934,"mtime":1610921965116,"results":"23","hashOfConfig":"21"},{"size":6042,"mtime":1611091668258,"results":"24","hashOfConfig":"21"},{"size":1994,"mtime":1610935309249,"results":"25","hashOfConfig":"21"},{"size":613,"mtime":1610933442528,"results":"26","hashOfConfig":"21"},{"size":509,"mtime":1610928065079,"results":"27","hashOfConfig":"21"},{"size":2167,"mtime":1610933971212,"results":"28","hashOfConfig":"21"},{"size":310,"mtime":1610752356620,"results":"29","hashOfConfig":"21"},{"size":1338,"mtime":1610991564110,"results":"30","hashOfConfig":"21"},{"size":439,"mtime":1610933741929,"results":"31","hashOfConfig":"21"},{"size":361,"mtime":1610913688159,"results":"32","hashOfConfig":"21"},{"size":710,"mtime":1610936779605,"results":"33","hashOfConfig":"21"},{"size":3415,"mtime":1610937038894,"results":"34","hashOfConfig":"21"},{"size":2056,"mtime":1610993204411,"results":"35","hashOfConfig":"21"},{"size":1005,"mtime":1610934654292,"results":"36","hashOfConfig":"21"},{"size":1592,"mtime":1610936692422,"results":"37","hashOfConfig":"21"},{"size":2588,"mtime":1610935515078,"results":"38","hashOfConfig":"21"},{"size":2144,"mtime":1610934816729,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x76w86",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},"/Users/Michael/Documents/study/DevTest/client/src/index.tsx",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/store.ts",[],["82","83"],"/Users/Michael/Documents/study/DevTest/client/src/router.tsx",[],"/Users/Michael/Documents/study/DevTest/client/src/pages/Home.tsx",[],"/Users/Michael/Documents/study/DevTest/client/src/layout/Layout.tsx",[],"/Users/Michael/Documents/study/DevTest/client/src/components/Card.tsx",[],"/Users/Michael/Documents/study/DevTest/client/src/components/types/InputTypes.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/components/Inputs.tsx",[],"/Users/Michael/Documents/study/DevTest/client/src/components/types/ButtonsTypes.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auto/AutoActions.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auto/AutoTypes.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/reducers/RootReducer.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/reducers/AutoReducer.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/pages/auth/Register.tsx",["84","85"],"import React, { useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { useSelector } from 'react-redux';\n\n// Actions\nimport {AuthRegister} from '../../redux/actions/auth/AuthActions';\nimport {GetAutos} from '../../redux/actions/auto/AutoActions'\n\n// Components\nimport Card from \"../../components/Card\";\nimport { InputText } from \"../../components/Inputs\";\nimport { ButtonClass } from \"../../components/types/ButtonsTypes\";\nimport {AutoStateType} from '../../redux/actions/auto/AutoTypes';\n\n// Types\nimport {AuthStateType} from '../../redux/actions/auth/AuthTypes'\n\nconst Register = () => {\n    const dispatch = useDispatch();\n\n    // Get Autos From Redux Store\n    const auto = useSelector((state: AutoStateType) => state.auto);\n\n    // Get Register State\n    const registerState = useSelector((state: AuthStateType) => state.auth);\n    const errors = registerState.errors;\n    \n    // SETUP STATE\n    const [name, setName] = useState(auto[0]?.name ?? '');\n    const [email, setEmail] = useState(auto[0]?.email ?? '');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    const handleSubmit = () => {\n        const data = {\n            name,\n            email,\n            password,\n            passwordConfirm\n        }\n\n        dispatch(AuthRegister(data))\n        dispatch(GetAutos(data))\n    }\n\n    const disableName = name !== '';\n    const disableEmail = email !== '';\n\n    return (\n        <div className=\"container mx-auto flex justify-center py-20\">\n            <Card imgSrc=\"https://images.unsplash.com/photo-1493238792000-8113da705763?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\">\n                <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n                    Create New Account\n                </h1>\n\n                {/* This will be for custom message */}\n                <div className=\"w-full flex-none text-sm font-bold text-green-300 mt-2 text-xl\">\n                    {auto[0]?.message}\n                </div>\n\n                {/* Register FORM */}\n                <div className=\"flex flex-col space-y-2 mt-4\">\n                    {/* Name */}\n                    <InputText inputValue={name} name=\"name\" label=\"Name\" setState={setName}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.name}</small>\n\n                    {/* Email */}\n                    <InputText inputValue={email} name=\"email\" label=\"Email\" setState={setEmail}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.email}</small>\n\n                    {/* Password */}\n                    <InputText name=\"password\" label=\"Password\" password={true} setState={setPassword}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.password}</small>\n\n                    {/* Password Confirm */}\n                    <InputText name=\"password_confirm\" label=\"Confirm Password\" password={true} setState={setPasswordConfirm}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.passwordConfirm}</small>\n\n                    <div className=\"py-4\">\n                        <button className={ButtonClass.primary}\n                         onClick={handleSubmit}>Create</button>\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Register","/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auth/AuthActions.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/actions/auth/AuthTypes.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/redux/reducers/AuthReducer.ts",[],"/Users/Michael/Documents/study/DevTest/client/src/pages/auth/Login.tsx",["86"],"import React, { useEffect, useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { useSelector } from 'react-redux';\n\n// Actions\nimport {AuthLogin} from '../../redux/actions/auth/AuthActions';\nimport {GetAutos} from '../../redux/actions/auto/AutoActions'\n\n// Types\nimport {AuthStateType} from '../../redux/actions/auth/AuthTypes'\n\n// Components\nimport Card from \"../../components/Card\";\nimport { InputText } from \"../../components/Inputs\";\nimport { ButtonClass } from \"../../components/types/ButtonsTypes\";\n\n\nconst Login = () => {\n    const dispatch = useDispatch();\n\n    // Get Register State\n    const registerState = useSelector((state: AuthStateType) => state.auth);\n    const errors = registerState.errors;\n    \n    // SETUP STATE\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Handle Form Submit Dispatch Actions\n    const handleSubmit = () => {\n        const data = {\n            email,\n            password,\n        }\n\n        // Dispatch Login && Get all autos array\n        dispatch(AuthLogin(data))\n        dispatch(GetAutos(data))\n    }\n\n    return (\n        <div className=\"container mx-auto flex justify-center py-20\">\n            <Card imgSrc=\"https://images.unsplash.com/photo-1557116544-1fb2be0d8e00?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\">\n                <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n                    Login\n                </h1>\n\n                <p className=\"text-pink-600\">\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Eaque possimus totam et voluptate nesciunt, quae ab quisquam esse maiores pariatur?\n                </p>\n\n                {/* Register FORM */}\n                <div className=\"flex flex-col space-y-2 mt-4\">\n                    {/* Email */}\n                    <InputText inputValue={email} name=\"email\" label=\"Email\" setState={setEmail}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.email}</small>\n\n                    {/* Password */}\n                    <InputText name=\"password\" label=\"Password\" password={true} setState={setPassword}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.error}</small>\n\n                    <div className=\"py-4\">\n                        <button className={ButtonClass.primary}\n                         onClick={handleSubmit}>Login</button>\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/Michael/Documents/study/DevTest/client/src/pages/Dashboard.tsx",["87"],"import React, {useEffect, useState} from 'react';\nimport {history} from '../redux/store';\nimport { useSelector } from 'react-redux';\nimport Card from \"../components/Card\";\nimport NumberFormat from 'react-number-format'\n\n// Types\nimport {AutoType} from '../redux/actions/auto/AutoTypes';\ntype AutoTypeArr = {\n    auto: AutoType[]\n}\n\ntype AuthType = {\n    auth: {\n        success: boolean\n        user: {\n            email: string\n        }\n    }\n}\n\nconst Dashboard = () => {\n    const auth = useSelector((state: AuthType) => state.auth);\n    const autos = useSelector((state: AutoTypeArr) => state.auto);\n    \n    useEffect(() => {\n        console.log(auth);\n        if(!auth.success) {\n            history.replace('/login')\n        }\n    })\n    return (\n        <div className=\"container mx-auto flex justify-center py-20\">\n            <Card imgSrc=\"https://images.unsplash.com/photo-1430080369629-afa4c2ae5121?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\">\n                <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n                    Dashboard\n                </h1>\n\n                {/* This will be for custom message */}\n                <div className=\"w-full flex-none text-sm font-bold text-green-300 mt-2 text-xl\">\n                    Current Auto Purchases\n                </div>\n\n                <div className=\"flex flex-col space-y-4 mt-4\">\n                    {autos.map((auto) => (\n                        <div key={auto.id}>\n                            <div className=\"text-sm\">\n                                <p> \n                                    <b>Make: </b> {auto.auto_make} {auto.auto_model}\n                                </p>\n                                <p>\n                                    <b>Price: </b> <NumberFormat value={auto.purchase_price} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                </p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Dashboard",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":46,"column":11,"nodeType":"94","messageId":"95","endLine":46,"endColumn":22},{"ruleId":"92","severity":1,"message":"96","line":47,"column":11,"nodeType":"94","messageId":"95","endLine":47,"endColumn":23},{"ruleId":"92","severity":1,"message":"97","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"98","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'disableName' is assigned a value but never used.","Identifier","unusedVar","'disableEmail' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]